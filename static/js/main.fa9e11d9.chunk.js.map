{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/card-list/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGA,SAASA,EAAKC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACrE,mCAAML,EAAMG,QAAQG,KAApB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,UCJN,SAASC,EAAUR,GACjB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAACJ,EAAD,CAAuBI,QAASA,GAArBA,EAAQC,S,MCL3B,SAASO,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC7B,OACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,I,IC0CHG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAUFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SATtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAed,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG/C,WAIE,IAAMlB,EAAWmB,KAAKN,MAAMb,SACtBU,EAAcS,KAAKN,MAAMH,YAEzBU,EAAmBpB,EAASqB,QAAO,SAAC3B,GAAD,OACvCA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAACU,EAAD,CACEC,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAACL,EAAD,CAAUC,SAAUoB,W,GAxCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa9e11d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\"/>\r\n      <h2> {props.monster.name} </h2>\r\n      <p> {props.monster.email} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Card };\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"./card/card.component\";\r\n\r\nfunction CardList (props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { CardList };\r\n","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nfunction SearchBox({placeholder, handleChange}) {\r\n    return (\r\n        <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    )\r\n};\r\n\r\nexport { SearchBox };","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/card-list/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    // Esto es lo mismo que declararlo dos veces\n    // const { monsters, searchField } = this.state;\n\n    const monsters = this.state.monsters;\n    const searchField = this.state.searchField;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}